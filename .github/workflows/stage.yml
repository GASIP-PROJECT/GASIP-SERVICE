# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Stage CICD

on:
  push:
    branches: 
    - stage
env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: gasipawsbucket
  AWS_CODE_DEPLOY_APPLICATION: cicd-gasip-staging
  AWS_CODE_DEPLOY_GROUP: cicd-staging-CD-group
  
jobs:
  build-with-gradle:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
        
    - name: JDK 17 설치
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        
    - name: gradlew에 실행 권한 부여
      run: chmod +x ./gradlew

    - name: Set YML
      run: | 
        mkdir -p src/main/resources
        echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > src/main/resources/application-dev.yml
        find src

    - name: Set FCM.json
      run: |
        mkdir -p src/main/resources/firebase
        echo "${{ secrets.FIREBASE_SECRET_ADMIN }}" | base64 --decode > src/main/resources/firebase/gasip-4eb42-firebase-adminsdk-3v4pj-6851019caa.json
        find src
        
      
    - name: 프로젝트 빌드
      run: ./gradlew clean build -x test
    
    - name: AWS credential 설정
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.TESTSERVER_CICD_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.TESTSERVER_CICD_SECRET_KEY }}
      
    - name: S3에 업로드
      run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/GasipTestServer/$GITHUB_SHA.zip --source .

    - name: EC2에 배포
      run: |
        aws deploy create-deployment \
        --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} \
        --s3-location bucket=$AWS_S3_BUCKET,key=GasipTestServer/$GITHUB_SHA.zip,bundleType=zip


